import cluster from "cluster";
import os from "os";
import { fileURLToPath } from "url";
import { dirname } from "path";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const numCPUs = os.cpus().length;

if (cluster.isPrimary) {
  console.log(`üöÄ –ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å ${process.pid} –∑–∞–ø—É—â–µ–Ω`);

  // –°–æ–∑–¥–∞–µ–º –≤–æ—Ä–∫–µ—Ä—ã
  for (let i = 0; i < numCPUs; i++) {
    cluster.fork();
  }

  cluster.on("exit", (worker, code, signal) => {
    console.log(`‚ùå –í–æ—Ä–∫–µ—Ä ${worker.process.pid} —É–º–µ—Ä`);
    console.log(`üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –≤–æ—Ä–∫–µ—Ä...`);
    cluster.fork();
  });

  // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–æ—Ä–∫–µ—Ä–æ–≤
  cluster.on("online", (worker) => {
    console.log(`‚úÖ –í–æ—Ä–∫–µ—Ä ${worker.process.pid} –∑–∞–ø—É—â–µ–Ω`);
  });
} else {
  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  import("./index.js").then((app) => {
    console.log(`üë∑ –í–æ—Ä–∫–µ—Ä ${process.pid} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ`);
  });
}
