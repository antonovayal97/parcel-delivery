name: Deploy to VPS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci

      - name: Run tests
        run: |
          npm test
          cd backend && npm test

      - name: Build frontend
        run: npm run build

      - name: Build backend
        run: |
          cd backend
          npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Обновление кода
            cd /opt/parcel-delivery
            git pull origin main

            # Остановка контейнеров
            docker-compose -f docker-compose.prod.yml down

            # Пересборка и запуск
            docker-compose -f docker-compose.prod.yml up --build -d

            # Проверка здоровья
            sleep 30
            curl -f http://localhost:8000/api/health || exit 1

            echo "Deployment completed successfully!"

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi
