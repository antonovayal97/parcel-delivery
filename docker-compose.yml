version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: parcel_delivery_postgres_prod
    environment:
      POSTGRES_DB: parcel_delivery
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      # Настройки для 1 CPU сервера
      POSTGRES_SHARED_BUFFERS: 128MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 512MB
      POSTGRES_WORK_MEM: 2MB
      POSTGRES_MAINTENANCE_WORK_MEM: 32MB
      POSTGRES_MAX_CONNECTIONS: 50
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - parcel_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: 1G
        reservations:
          cpus: "0.3"
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: parcel_delivery_redis_prod
    command: redis-server --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - parcel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 256M

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: parcel_delivery_backend_prod
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=production
      - PORT=8000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=parcel_delivery
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_POOL_MAX=50
      - DB_POOL_MIN=10
      - REDIS_URL=redis://redis:6379
      - RATE_LIMIT_MAX=2000
      - JWT_SECRET=your-super-secret-jwt-key
      - BOT_TOKEN=7322426259:AAFO-nVyDdJZbWoC7hu2nHpEW_2ss03Vo0o
      - FRONTEND_URL=https://parcel-delivery.tw1.ru
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - parcel_network
    restart: unless-stopped
    deploy:
      replicas: 1 # 1 экземпляр backend для 1 CPU
      resources:
        limits:
          cpus: "0.4"
          memory: 1G
        reservations:
          cpus: "0.2"
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  nginx:
    image: nginx:alpine
    container_name: parcel_delivery_nginx_prod
    volumes:
      - ./backend/docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - backend
      - frontend
      - admin-frontend
    networks:
      - parcel_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: parcel_delivery_frontend_prod
    environment:
      - VITE_API_URL=https://parcel-delivery.tw1.ru/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - parcel_network
    restart: unless-stopped
    deploy:
      replicas: 1 # 1 экземпляр frontend для 1 CPU
      resources:
        limits:
          cpus: "0.3"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 256M

  admin-frontend:
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile
    container_name: parcel_delivery_admin_frontend_prod
    environment:
      - VITE_API_URL=https://parcel-delivery.tw1.ru/api
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - parcel_network
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  parcel_network:
    driver: bridge
