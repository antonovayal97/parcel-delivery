version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: parcel_delivery_postgres_prod
    environment:
      POSTGRES_DB: parcel_delivery
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - parcel_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: parcel_delivery_redis_prod
    volumes:
      - redis_data:/data
    networks:
      - parcel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: parcel_delivery_backend_prod
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=production
      - PORT=8000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=parcel_delivery
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key
      - BOT_TOKEN=7322426259:AAFO-nVyDdJZbWoC7hu2nHpEW_2ss03Vo0o
      - FRONTEND_URL=https://parcel-delivery.tw1.ru
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - parcel_network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: parcel_delivery_frontend_prod
    environment:
      - VITE_API_URL=https://parcel-delivery.tw1.ru/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - parcel_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  parcel_network:
    driver: bridge
